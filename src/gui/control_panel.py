"""
–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º

–°–æ–¥–µ—Ä–∂–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π,
—Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π, –≤—ã–±–æ—Ä–∞ RGB –∫–∞–Ω–∞–ª–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
"""
import torch
import cv2
from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QGroupBox, 
    QPushButton, QComboBox, QLabel, QSlider, QSpinBox,
    QCheckBox, QFrame, QScrollArea, QInputDialog, QMessageBox
)
from PyQt5.QtCore import Qt, pyqtSignal
from PyQt5.QtGui import QFont

class ControlPanel(QWidget):
    """–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"""
    
    # –°–∏–≥–Ω–∞–ª—ã
    load_image_requested = pyqtSignal()
    camera_toggle_requested = pyqtSignal()
    capture_frame_requested = pyqtSignal()
    channel_changed = pyqtSignal(str)
    processing_requested = pyqtSignal(str, dict)  # function_name, parameters
    save_image_requested = pyqtSignal()
    
    def __init__(self):
        super().__init__()
        
        self.current_image = None
        self.camera_active = False
        
        self.init_ui()
    
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        
        scroll_widget = QWidget()
        main_layout = QVBoxLayout()
        scroll_widget.setLayout(main_layout)
        scroll_area.setWidget(scroll_widget)
        
        # –ì–ª–∞–≤–Ω—ã–π layout –ø–∞–Ω–µ–ª–∏
        panel_layout = QVBoxLayout()
        panel_layout.addWidget(scroll_area)
        self.setLayout(panel_layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("üéõÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        title_label.setFont(QFont("Arial", 12, QFont.Bold))
        title_label.setAlignment(Qt.AlignCenter)
        main_layout.addWidget(title_label)
        
        # –ì—Ä—É–ø–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        main_layout.addWidget(self.create_file_group())
        main_layout.addWidget(self.create_camera_group())
        main_layout.addWidget(self.create_channel_group())
        main_layout.addWidget(self.create_variant_functions_group())
        main_layout.addWidget(self.create_info_group())
        
        # –†–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
        main_layout.addStretch()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã
        self.setMaximumWidth(350)
        self.setMinimumWidth(300)
    
    def create_file_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏"""
        
        group = QGroupBox("üìÅ –§–∞–π–ª—ã")
        layout = QVBoxLayout()
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        load_btn = QPushButton("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        load_btn.clicked.connect(self.load_image_requested.emit)
        layout.addWidget(load_btn)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        save_btn = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        save_btn.clicked.connect(self.save_image_requested.emit)
        layout.addWidget(save_btn)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        self.file_info_label = QLabel("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
        self.file_info_label.setStyleSheet("color: #666; font-size: 11px;")
        self.file_info_label.setWordWrap(True)
        layout.addWidget(self.file_info_label)
        
        group.setLayout(layout)
        return group
    
    def create_camera_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π"""
        
        group = QGroupBox("üì∑ –í–µ–±-–∫–∞–º–µ—Ä–∞")
        layout = QVBoxLayout()
        
        # –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã
        self.camera_btn = QPushButton("üì∑ –í–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
        self.camera_btn.clicked.connect(self.toggle_camera)
        layout.addWidget(self.camera_btn)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞—Ö–≤–∞—Ç–∞ –∫–∞–¥—Ä–∞
        self.capture_btn = QPushButton("üì∏ –ó–∞—Ö–≤–∞—Ç–∏—Ç—å –∫–∞–¥—Ä")
        self.capture_btn.clicked.connect(self.capture_frame_requested.emit)
        self.capture_btn.setEnabled(False)
        layout.addWidget(self.capture_btn)
        
        # –°—Ç–∞—Ç—É—Å –∫–∞–º–µ—Ä—ã
        self.camera_status_label = QLabel("–ö–∞–º–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞")
        self.camera_status_label.setStyleSheet("color: #666; font-size: 11px;")
        layout.addWidget(self.camera_status_label)
        
        group.setLayout(layout)
        return group
    
    def create_channel_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤—ã–±–æ—Ä–∞ RGB –∫–∞–Ω–∞–ª–æ–≤"""
        
        group = QGroupBox("üé® RGB –∫–∞–Ω–∞–ª—ã")
        layout = QVBoxLayout()
        
        # –ö–æ–º–±–æ-–±–æ–∫—Å –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞
        self.channel_combo = QComboBox()
        self.channel_combo.addItems([
            "RGB (–æ—Ä–∏–≥–∏–Ω–∞–ª)",
            "–ö—Ä–∞—Å–Ω—ã–π –∫–∞–Ω–∞–ª", 
            "–ó–µ–ª–µ–Ω—ã–π –∫–∞–Ω–∞–ª",
            "–°–∏–Ω–∏–π –∫–∞–Ω–∞–ª"
        ])
        self.channel_combo.currentTextChanged.connect(self.on_channel_changed)
        layout.addWidget(self.channel_combo)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ
        self.channel_info_label = QLabel("–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        self.channel_info_label.setStyleSheet("color: #666; font-size: 11px;")
        self.channel_info_label.setWordWrap(True)
        layout.addWidget(self.channel_info_label)
        
        group.setLayout(layout)
        return group
    
    def create_variant_functions_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ñ—É–Ω–∫—Ü–∏–π –≤–∞—Ä–∏–∞–Ω—Ç–∞"""
        
        group = QGroupBox("‚öôÔ∏è –§—É–Ω–∫—Ü–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
        layout = QVBoxLayout()
        
        # –§—É–Ω–∫—Ü–∏—è 1: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        resize_btn = QPushButton("üìè –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä")
        resize_btn.clicked.connect(self.resize_image_dialog)
        layout.addWidget(resize_btn)
        
        # –§—É–Ω–∫—Ü–∏—è 8: –ü–æ–Ω–∏–∂–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏
        brightness_btn = QPushButton("üîÖ –ü–æ–Ω–∏–∑–∏—Ç—å —è—Ä–∫–æ—Å—Ç—å")
        brightness_btn.clicked.connect(self.decrease_brightness_dialog)
        layout.addWidget(brightness_btn)
        
        # –§—É–Ω–∫—Ü–∏—è 13: –†–∏—Å–æ–≤–∞–Ω–∏–µ —Å–∏–Ω–µ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        rect_btn = QPushButton("üî∑ –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–∏–Ω–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫")
        rect_btn.clicked.connect(self.draw_blue_rectangle_dialog)
        layout.addWidget(rect_btn)
        
        # –ü–æ–≤–æ—Ä–æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        rotate_btn = QPushButton("üîÑ –ü–æ–≤–µ—Ä–Ω—É—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        rotate_btn.clicked.connect(self.rotate_image_dialog)
        layout.addWidget(rotate_btn)
        
        # –†–∞–∑–º—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        blur_btn = QPushButton("üå´Ô∏è –†–∞–∑–º—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        blur_btn.clicked.connect(self.apply_blur_dialog)
        layout.addWidget(blur_btn)
        
        # –û–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        crop_btn = QPushButton("‚úÇÔ∏è –û–±—Ä–µ–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        crop_btn.clicked.connect(self.crop_image_dialog)
        layout.addWidget(crop_btn)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–π —Ä–∞–º–∫–∏
        border_btn = QPushButton("‚¨õ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–º–∫–∏")
        border_btn.clicked.connect(self.add_border_dialog)
        layout.addWidget(border_btn)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞
        reset_btn = QPushButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        reset_btn.clicked.connect(self.reset_processing)
        layout.addWidget(reset_btn)
        
        # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.processing_buttons = [resize_btn, brightness_btn, rect_btn, rotate_btn, 
                                  blur_btn, crop_btn, border_btn, reset_btn]
        for btn in self.processing_buttons:
            btn.setEnabled(False)
        
        group.setLayout(layout)
        return group
    
    def create_info_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        
        group = QGroupBox("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        layout = QVBoxLayout()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö
        try:
            opencv_version = cv2.__version__
        except ImportError:
            opencv_version = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        try:
            pytorch_version = torch.__version__
        except ImportError:
            pytorch_version = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        versions_text = f"""
        üì∑ OpenCV: {opencv_version}
        üî• PyTorch: {pytorch_version}
        """
        
        versions_label = QLabel(versions_text.strip())
        versions_label.setStyleSheet("font-size: 10px; color: #555;")
        layout.addWidget(versions_label)
        
        group.setLayout(layout)
        return group
    
    def toggle_camera(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–º–µ—Ä—ã"""
        
        self.camera_toggle_requested.emit()
    
    def on_channel_changed(self, channel_text):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è RGB –∫–∞–Ω–∞–ª–∞"""
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞
        if "–æ—Ä–∏–≥–∏–Ω–∞–ª" in channel_text.lower():
            channel = "original"
            info_text = "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        elif "–∫—Ä–∞—Å–Ω—ã–π" in channel_text.lower():
            channel = "red"
            info_text = "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–Ω—ã–π –∫–∞–Ω–∞–ª"
        elif "–∑–µ–ª–µ–Ω—ã–π" in channel_text.lower():
            channel = "green"
            info_text = "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–µ–ª–µ–Ω—ã–π –∫–∞–Ω–∞–ª"
        elif "—Å–∏–Ω–∏–π" in channel_text.lower():
            channel = "blue"
            info_text = "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–∏–Ω–∏–π –∫–∞–Ω–∞–ª"
        else:
            channel = "original"
            info_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª"
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        self.channel_info_label.setText(info_text)
        
        # –ò—Å–ø—É—Å–∫–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞
        self.channel_changed.emit(channel)
    
    def resize_image_dialog(self):
        """–î–∏–∞–ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        height, width = self.current_image.shape[:2]
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —à–∏—Ä–∏–Ω—ã
        new_width, ok1 = QInputDialog.getInt(
            self, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞", 
            f"–¢–µ–∫—É—â–∞—è —à–∏—Ä–∏–Ω–∞: {width}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —à–∏—Ä–∏–Ω—É:",
            width, 1, 8000
        )
        
        if not ok1:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π –≤—ã—Å–æ—Ç—ã
        new_height, ok2 = QInputDialog.getInt(
            self, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞", 
            f"–¢–µ–∫—É—â–∞—è –≤—ã—Å–æ—Ç–∞: {height}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≤—ã—Å–æ—Ç—É:",
            height, 1, 8000
        )
        
        if not ok2:
            return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'new_width': new_width,
            'new_height': new_height
        }
        self.processing_requested.emit('resize_image', parameters)
    
    def decrease_brightness_dialog(self):
        """–î–∏–∞–ª–æ–≥ –ø–æ–Ω–∏–∂–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è
        value, ok = QInputDialog.getInt(
            self, "–ü–æ–Ω–∏–∂–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏", 
            "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–Ω–∏–∂–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏ (0-100):",
            20, 0, 100
        )
        
        if not ok:
            return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'value': value
        }
        self.processing_requested.emit('decrease_brightness', parameters)
    
    def draw_blue_rectangle_dialog(self):
        """–î–∏–∞–ª–æ–≥ —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Å–∏–Ω–µ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        height, width = self.current_image.shape[:2]
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞
        top_left_x, ok1 = QInputDialog.getInt(
            self, "–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞", 
            f"–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width}√ó{height}\n–í–≤–µ–¥–∏—Ç–µ X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞:",
            0, 0, width - 1
        )
        
        if not ok1:
            return
        
        top_left_y, ok2 = QInputDialog.getInt(
            self, "–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞", 
            f"–í–≤–µ–¥–∏—Ç–µ Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞:",
            0, 0, height - 1
        )
        
        if not ok2:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ —à–∏—Ä–∏–Ω—ã
        rect_width, ok3 = QInputDialog.getInt(
            self, "–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞", 
            f"–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞:",
            100, 1, width - top_left_x
        )
        
        if not ok3:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –≤—ã—Å–æ—Ç—ã
        rect_height, ok4 = QInputDialog.getInt(
            self, "–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞", 
            f"–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞:",
            100, 1, height - top_left_y
        )
        
        if not ok4:
            return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'top_left_x': top_left_x,
            'top_left_y': top_left_y,
            'width': rect_width,
            'height': rect_height
        }
        self.processing_requested.emit('draw_blue_rectangle', parameters)
    
    def rotate_image_dialog(self):
        """–î–∏–∞–ª–æ–≥ –ø–æ–≤–æ—Ä–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ —É–≥–ª–∞
        angle, ok = QInputDialog.getInt(
            self, "–ü–æ–≤–æ—Ä–æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            "–í–≤–µ–¥–∏—Ç–µ —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ (–≤ –≥—Ä–∞–¥—É—Å–∞—Ö):",
            0, -360, 360
        )
        
        if not ok:
            return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'angle': angle
        }
        self.processing_requested.emit('rotate_image', parameters)
    
    def apply_blur_dialog(self):
        """–î–∏–∞–ª–æ–≥ —Ä–∞–∑–º—ã—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ —Ä–∞–∑–º–µ—Ä–∞ —è–¥—Ä–∞
        kernel_size, ok = QInputDialog.getInt(
            self, "–†–∞–∑–º—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —è–¥—Ä–∞ (–Ω–µ—á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ):",
            5, 3, 31, 2  
        )
        
        if not ok:
            return
        
        if kernel_size % 2 == 0:
            kernel_size += 1
            QMessageBox.information(self, "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞", 
                                  f"–†–∞–∑–º–µ—Ä —è–¥—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {kernel_size} (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ—á–µ—Ç–Ω—ã–º)")
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'kernel_size': kernel_size
        }
        self.processing_requested.emit('apply_blur', parameters)
    
    def crop_image_dialog(self):
        """–î–∏–∞–ª–æ–≥ –æ–±—Ä–µ–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        height, width = self.current_image.shape[:2]
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        x, ok1 = QInputDialog.getInt(
            self, "–û–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            f"–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width}√ó{height}\n–í–≤–µ–¥–∏—Ç–µ X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞:",
            0, 0, width - 1
        )
        
        if not ok1:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        y, ok2 = QInputDialog.getInt(
            self, "–û–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            f"–í–≤–µ–¥–∏—Ç–µ Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞:",
            0, 0, height - 1
        )
        
        if not ok2:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ —à–∏—Ä–∏–Ω—ã
        w, ok3 = QInputDialog.getInt(
            self, "–û–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            f"–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –æ–±–ª–∞—Å—Ç–∏:",
            min(100, width - x), 1, width - x
        )
        
        if not ok3:
            return
        
        # –î–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ –≤—ã—Å–æ—Ç—ã
        h, ok4 = QInputDialog.getInt(
            self, "–û–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            f"–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –æ–±–ª–∞—Å—Ç–∏:",
            min(100, height - y), 1, height - y
        )
        
        if not ok4:
            return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'x': x,
            'y': y,
            'width': w,
            'height': h
        }
        self.processing_requested.emit('crop_image', parameters)
    
    def add_border_dialog(self):
        """–î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–π —Ä–∞–º–∫–∏"""
        
        if self.current_image is None:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –î–∏–∞–ª–æ–≥–∏ –≤–≤–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
        top, ok1 = QInputDialog.getInt(
            self, "–ß–µ—Ä–Ω–∞—è —Ä–∞–º–∫–∞", 
            "–í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ (–ø–∏–∫—Å–µ–ª–∏):",
            10, 0, 500
        )
        if not ok1: return
        
        bottom, ok2 = QInputDialog.getInt(
            self, "–ß–µ—Ä–Ω–∞—è —Ä–∞–º–∫–∞", 
            "–ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ (–ø–∏–∫—Å–µ–ª–∏):",
            10, 0, 500
        )
        if not ok2: return
        
        left, ok3 = QInputDialog.getInt(
            self, "–ß–µ—Ä–Ω–∞—è —Ä–∞–º–∫–∞", 
            "–õ–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ (–ø–∏–∫—Å–µ–ª–∏):",
            10, 0, 500
        )
        if not ok3: return
        
        right, ok4 = QInputDialog.getInt(
            self, "–ß–µ—Ä–Ω–∞—è —Ä–∞–º–∫–∞", 
            "–ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ (–ø–∏–∫—Å–µ–ª–∏):",
            10, 0, 500
        )
        if not ok4: return
        
        # –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        parameters = {
            'top': top,
            'bottom': bottom,
            'left': left,
            'right': right
        }
        self.processing_requested.emit('add_black_border', parameters)
    
    def reset_processing(self):
        """–°–±—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
        
        if self.current_image is None:
            return
        
        # –°–±—Ä–æ—Å –∫–∞–Ω–∞–ª–∞ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—É
        self.channel_combo.setCurrentIndex(0)
        
        # –ó–∞–ø—Ä–æ—Å —Å–±—Ä–æ—Å–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ (—á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª—ã)
        self.processing_requested.emit('reset', {})
    
    def on_image_loaded(self, image):
        """–°–ª–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        self.current_image = image
    
        if image is not None:
            # –í–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            for btn in self.processing_buttons:
                btn.setEnabled(True)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
            height, width = image.shape[:2]
            channels = len(image.shape)
            
            info_text = f"–†–∞–∑–º–µ—Ä: {width}√ó{height}\n"
            if channels == 3:
                info_text += "–§–æ—Ä–º–∞—Ç: –¶–≤–µ—Ç–Ω–æ–µ (BGR)"
            else:
                info_text += "–§–æ—Ä–º–∞—Ç: –û—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ"
            
            self.file_info_label.setText(info_text)
            
            # –°–±—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            self.parent().processed_image = None
        else:
            # –í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            for btn in self.processing_buttons:
                btn.setEnabled(False)
            
            self.file_info_label.setText("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
    
    def on_camera_started(self):
        """–°–ª–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä—ã"""
        
        self.camera_active = True
        self.camera_btn.setText("üì∑ –í—ã–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
        self.capture_btn.setEnabled(True)
        self.camera_status_label.setText("–ö–∞–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞")
        self.camera_status_label.setStyleSheet("color: green; font-size: 11px;")
    
    def on_camera_stopped(self):
        """–°–ª–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–º–µ—Ä—ã"""
        
        self.camera_active = False
        self.camera_btn.setText("üì∑ –í–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
        self.capture_btn.setEnabled(False)
        self.camera_status_label.setText("–ö–∞–º–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞")
        self.camera_status_label.setStyleSheet("color: #666; font-size: 11px;")
    
    def reset_controls(self):
        """–°–±—Ä–æ—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é"""
        
        # –°–±—Ä–æ—Å –∫–∞–Ω–∞–ª–∞
        self.channel_combo.setCurrentIndex(0)
        
        # –°–±—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ
        self.channel_info_label.setText("–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
