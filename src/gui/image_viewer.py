"""
–í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é
–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.
"""

import cv2
import numpy as np
from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QLabel, QScrollArea, 
    QHBoxLayout, QPushButton, QSlider, QFrame
)
from PyQt5.QtCore import Qt, pyqtSignal
from PyQt5.QtGui import QPixmap, QImage, QFont

class ImageViewer(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    # –°–∏–≥–Ω–∞–ª—ã
    image_clicked = pyqtSignal(int, int)
    zoom_changed = pyqtSignal(float)
    crop_applied = pyqtSignal(object)
    
    def __init__(self):
        super().__init__()
        
        self.current_image = None
        self.current_pixmap = None
        self.zoom_factor = 1.0
        self.min_zoom = 0.1
        self.max_zoom = 5.0
        self.crop_mode = False
        self.crop_start = None
        self.crop_end = None
        self.crop_rect = None
        self.dragging = False
        self.init_ui()
    
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout()
        self.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("üì∑ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        title_label.setFont(QFont("Arial", 12, QFont.Bold))
        title_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(title_label)
        
        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setAlignment(Qt.AlignCenter)
        self.scroll_area.setMinimumSize(600, 400)
        
        # Label –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.image_label = QLabel()
        self.image_label.setAlignment(Qt.AlignCenter)
        self.image_label.setStyleSheet("""
            QLabel {
                border: 2px dashed #aaa;
                background-color: #fafafa;
                border-radius: 5px;
                min-height: 300px;
                color: #666;
                font-size: 14px;
            }
        """)
        self.image_label.setText("üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n–∏–ª–∏ –≤–∫–ª—é—á–∏—Ç–µ –∫–∞–º–µ—Ä—É")
        self.image_label.mousePressEvent = self.on_image_click
        
        self.scroll_area.setWidget(self.image_label)
        layout.addWidget(self.scroll_area)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–æ–º
        zoom_panel = self.create_zoom_panel()
        layout.addWidget(zoom_panel)
        
        # –ü–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        info_panel = self.create_info_panel()
        layout.addWidget(info_panel)
    
    def create_zoom_panel(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–æ–º"""
        
        panel = QFrame()
        panel.setFrameStyle(QFrame.StyledPanel)
        panel.setMaximumHeight(60)
        
        layout = QHBoxLayout()
        panel.setLayout(layout)
        
        # –ö–Ω–æ–ø–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è
        zoom_out_btn = QPushButton("‚ûñ")
        zoom_out_btn.setMaximumWidth(40)
        zoom_out_btn.clicked.connect(self.zoom_out)
        layout.addWidget(zoom_out_btn)
        
        # –°–ª–∞–π–¥–µ—Ä –º–∞—Å—à—Ç–∞–±–∞
        self.zoom_slider = QSlider(Qt.Horizontal)
        self.zoom_slider.setMinimum(int(self.min_zoom * 100))
        self.zoom_slider.setMaximum(int(self.max_zoom * 100))
        self.zoom_slider.setValue(100)  # 100% = 1.0
        self.zoom_slider.valueChanged.connect(self.on_zoom_slider_changed)
        layout.addWidget(self.zoom_slider)
        
        # –ö–Ω–æ–ø–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è
        zoom_in_btn = QPushButton("‚ûï")
        zoom_in_btn.setMaximumWidth(40)
        zoom_in_btn.clicked.connect(self.zoom_in)
        layout.addWidget(zoom_in_btn)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –º–∞—Å—à—Ç–∞–±–∞
        reset_zoom_btn = QPushButton("100%")
        reset_zoom_btn.setMaximumWidth(50)
        reset_zoom_btn.clicked.connect(self.reset_zoom)
        layout.addWidget(reset_zoom_btn)
        
        # Label —Å —Ç–µ–∫—É—â–∏–º –º–∞—Å—à—Ç–∞–±–æ–º
        self.zoom_label = QLabel("100%")
        self.zoom_label.setMinimumWidth(50)
        self.zoom_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(self.zoom_label)
        
        return panel
    
    def create_info_panel(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"""
        
        panel = QFrame()
        panel.setFrameStyle(QFrame.StyledPanel)
        panel.setMaximumHeight(40)
        
        layout = QHBoxLayout()
        panel.setLayout(layout)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–µ
        self.size_label = QLabel("–†–∞–∑–º–µ—Ä: ‚Äî")
        layout.addWidget(self.size_label)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä–º–∞—Ç–µ
        self.format_label = QLabel("–§–æ—Ä–º–∞—Ç: ‚Äî")
        layout.addWidget(self.format_label)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö –∫—É—Ä—Å–æ—Ä–∞
        self.coords_label = QLabel("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ‚Äî")
        layout.addWidget(self.coords_label)
        
        layout.addStretch()
        
        return panel
    
    def set_image(self, image):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        try:
            if image is None:
                self.clear_image()
                return
            
            self.current_image = image.copy()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ QPixmap
            self.current_pixmap = self.opencv_to_qpixmap(image)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            self.update_display()
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            self.update_image_info()
            
        except Exception as e:
            self.clear_image()
            self.size_label.setText(f"–û—à–∏–±–∫–∞: {str(e)}")
    
    def clear_image(self):
        """–û—á–∏—Å—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        self.current_image = None
        self.current_pixmap = None
        
        self.image_label.clear()
        self.image_label.setText("üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n–∏–ª–∏ –≤–∫–ª—é—á–∏—Ç–µ –∫–∞–º–µ—Ä—É")
        
        self.size_label.setText("–†–∞–∑–º–µ—Ä: ‚Äî")
        self.format_label.setText("–§–æ—Ä–º–∞—Ç: ‚Äî")
        self.coords_label.setText("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ‚Äî")
    
    def update_display(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–∏–º –º–∞—Å—à—Ç–∞–±–æ–º"""
        
        if self.current_pixmap is None:
            return
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞
        scaled_pixmap = self.current_pixmap.scaled(
            self.current_pixmap.size() * self.zoom_factor,
            Qt.KeepAspectRatio,
            Qt.SmoothTransformation
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.image_label.setPixmap(scaled_pixmap)
        self.image_label.resize(scaled_pixmap.size())
    
    def update_image_info(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"""
        
        if self.current_image is None:
            return
        
        height, width = self.current_image.shape[:2]
        channels = len(self.current_image.shape)
        
        # –†–∞–∑–º–µ—Ä
        self.size_label.setText(f"–†–∞–∑–º–µ—Ä: {width}√ó{height}")
        
        # –§–æ—Ä–º–∞—Ç
        if channels == 3:
            format_text = "–¶–≤–µ—Ç–Ω–æ–µ (BGR)"
        elif channels == 1:
            format_text = "–û—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ"
        else:
            format_text = f"{channels} –∫–∞–Ω–∞–ª–æ–≤"
        
        self.format_label.setText(f"–§–æ—Ä–º–∞—Ç: {format_text}")
    
    def opencv_to_qpixmap(self, cv_image):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è OpenCV –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ QPixmap"""
        
        if len(cv_image.shape) == 3:
            # –¶–≤–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            height, width, channels = cv_image.shape
            bytes_per_line = channels * width
            
            # OpenCV –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BGR, Qt –∏—Å–ø–æ–ª—å–∑—É–µ—Ç RGB
            rgb_image = cv2.cvtColor(cv_image, cv2.COLOR_BGR2RGB)
            qt_image = QImage(
                rgb_image.data, width, height, 
                bytes_per_line, QImage.Format_RGB888
            )
        else:
            # –û—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ
            height, width = cv_image.shape
            bytes_per_line = width
            qt_image = QImage(
                cv_image.data, width, height, 
                bytes_per_line, QImage.Format_Grayscale8
            )
        
        return QPixmap.fromImage(qt_image)
    
    def zoom_in(self):
        """–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞"""
        
        new_zoom = min(self.zoom_factor * 1.25, self.max_zoom)
        self.set_zoom(new_zoom)
    
    def zoom_out(self):
        """–£–º–µ–Ω—å—à–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞"""
        
        new_zoom = max(self.zoom_factor / 1.25, self.min_zoom)
        self.set_zoom(new_zoom)
    
    def reset_zoom(self):
        """–°–±—Ä–æ—Å –º–∞—Å—à—Ç–∞–±–∞ –∫ 100%"""
        
        self.set_zoom(1.0)
    
    def set_zoom(self, zoom_factor):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞"""
        
        zoom_factor = max(self.min_zoom, min(zoom_factor, self.max_zoom))
        
        if abs(zoom_factor - self.zoom_factor) < 0.01:
            return
        
        self.zoom_factor = zoom_factor
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.update_display()
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.zoom_slider.setValue(int(zoom_factor * 100))
        self.zoom_label.setText(f"{int(zoom_factor * 100)}%")
        
        # –ò—Å–ø—É—Å–∫–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞
        self.zoom_changed.emit(zoom_factor)
    
    def on_zoom_slider_changed(self, value):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ –º–∞—Å—à—Ç–∞–±–∞"""
        
        zoom_factor = value / 100.0
        self.set_zoom(zoom_factor)
    
    def on_image_click(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
        
        if self.current_image is None:
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∫–ª–∏–∫–∞
        x = event.pos().x()
        y = event.pos().y()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å —É—á–µ—Ç–æ–º –º–∞—Å—à—Ç–∞–±–∞
        if self.zoom_factor != 0:
            original_x = int(x / self.zoom_factor)
            original_y = int(y / self.zoom_factor)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–Ω–∏—Ü
            height, width = self.current_image.shape[:2]
            if 0 <= original_x < width and 0 <= original_y < height:
                self.coords_label.setText(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({original_x}, {original_y})")
                self.image_clicked.emit(original_x, original_y)
            else:
                self.coords_label.setText("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ‚Äî")
    
    def wheelEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫–æ–ª–µ—Å–∞ –º—ã—à–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è"""
        
        if self.current_pixmap is None:
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        delta = event.angleDelta().y()
        
        if delta > 0:
            self.zoom_in()
        else:
            self.zoom_out()
    
    def update_image(self, image):
        """–°–ª–æ—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏–≥–Ω–∞–ª–∞–º)"""
        
        self.set_image(image)
    
    def get_current_image(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        
        return self.current_image
    
    def get_zoom_factor(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Å—à—Ç–∞–±–∞"""
        
        return self.zoom_factor
